apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'checkstyle'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven{
            url 'http://guardian.github.com/maven/repo-releases'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.mgtv.qxx.ttsdemo"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'

    compile 'com.android.support:support-annotations'
    compile 'com.gu:option:1.3'
    compile 'com.github.frankiesardo:auto-parcel:0.3.1'
    compile 'com.google.auto.value:auto-value:1.1'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.3.1'

    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.squareup.assertj:assertj-android:1.1.0'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3' // fixes issue on linux/mac
    testCompile('org.robolectric:robolectric:3.0')
    testCompile('org.robolectric:shadows-support-v4:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}


checkstyle {
  configFile project.file('../config/checkstyle/checkstyle.xml')
  showViolations true
}

//apply from: 'https://raw.githubusercontent.com/robbypond/gradle-mvn-push/8f35c0555e9c71154c08dfde9397340099f8dc9f/gradle-mvn-push.gradle'


//gradle.taskGraph.whenReady { taskGraph ->
//  if (taskGraph.allTasks.any { it instanceof Sign } &&
//      ':library:uploadArchives' in gradle.startParameter.taskNames) {
//    // Use Java 6's console to read from the console (no good for a CI environment)
//    Console console = System.console()
//    console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"
//    allprojects { ext."signing.password" = console.readPassword("PGP Private Key Password: ") }
//  }
//}

